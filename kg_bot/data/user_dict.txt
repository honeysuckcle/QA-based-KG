α测试 hhtt
安全测试 hhtt
安装测试 hh
白盒测试 hhtt
边界值分析 hh
并发性能测试 hhtt
测试环境 hhrrtt
测试计划 hhtt
测试驱动开发 hh
测试用例 hhrrtt
代码走读 hhtt
单元测试 hhtt
等价类划分 hh
端到端测试 hh
服务器端性能测试 hh
负载测试 hhtt
黑盒测试 hhtt
回归测试 hhtt
基准测试 hhtt
集成测试 hhtt
兼容性 hhtt
健壮性测试 hhtt
接口测试 hh
可用性测试 hh
客户端性能测试 hh
判定表驱动法 hhtt
配置测试 hh
容量测试 hhtt
软件测试 hhtt
软件度量 hh
软件过程 hh
软件兼容 hhtt
数据完整性 hh
网络端性能测试 hh
系统测试 hhtt
性能测试 hh
性能分析 hhtt
性能调优 hh
压力测试 hhtt
因果图法 hhtt
用户界面测试 hh
词法分析 hhtt
单词 hhtt
语素 hh
词法分析器生成工具 hh
flex hhtt
lex hhtt
词法分析器 hhtt
有限状态自动机 hhtt
编译 hh
中间代码 hhtt
目标代码 hhtt
代码优化 hhtt
语法分析 hhtt
LL分析法 hhtt
LR分析法 hhtt
程序分析 hh
静态分析 hhtt
计算机科学静态分析 hhtt
源程序静态分析 hhtt
源程序 hh
静态程序分析引用表 hh
静态错误分析 hhtt
表达式分析 hhtt
接口分析 hhtt
形式化方法 hh
形式化静态分析 hh
静态程序分析 hhtt
动态分析 hhtt
软件开发 hh
逆向工程 hhtt
系统优化 hhtt
动态检测 hhtt
逻辑覆盖 hhtt
语句覆盖 hhtt
判定覆盖 hhtt
条件覆盖 hhtt
判定条件覆盖 hh
条件组合覆盖 hhtt
路径覆盖 hhtt
逻辑覆盖法 hhtt
表达式 hh
程序框图 hhtt
控制流图 hhtt
恢复测试 hhtt
自动恢复 hh
数据恢复 hhtt
代码审查 hh
结对编程 hhtt
内存泄漏 hh
缓存溢出 hh
安全漏洞 hhtt
极端编程 hh
编译器 hh
变异测试 hh
域测试 hhtt
域欺骗 hhtt
β测试 hhtt
功能测试 hhtt
发行测试 hhtt
因果图 hh
扫描器 hh
声明 hh
转换规则 hh
其它函数 hh
中间语言 hh
自上而下语法分析方法 hh
自下而上语法分析方法 hh
逆向技术 hh
程序流程图 hh
分支结构 hh
控制流程图 hh
计算机安全隐患 hh
DNS下毒 hh
目的 rr
注重点 rr
开始于 rr
外文名 rr
实质 rr
定义 rr
关键点 rr
下一阶段 rr
限制条件 rr
错误反馈 rr
前提条件 rr
属于 rr
测试单位 rr
测试方法 rrtt
代表 rr
过程 rr
方法 rr
困境 rr
特点 rr
依据 rr
应用场景 rr
包括 rr
起作用于 rr
测试对象 rr
释义 rr
覆盖标准 rr
原则 rr
流程 rr
分类 rr
三步法 rr
应用领域 rr
工具选择 rr
测试内容 rrtt
支持语言 rr
支持嵌入式OS rr
支持硬件平台 rr
优点 rr
缺点 rr
特征 rr
测试人员 rr
作用 rr
产生原因 rr
重点 rr
选取原则 rr
包含 rr
方式 rr
准备工作 rr
监控对象 rr
指标 rr
组成 rr
维护目的 rr
对象 rr
目标 rr
范围 rr
编写原因 rr
编写人员 rr
编写时间 rr
六要素 rr
要点 rr
简称 rr
前景 rr
内容 rr
设计方法 rr
记录 rr
生成 rr
配套 rr
重要性 rr
文档组成 rr
设置方法 rr
种类 rr
设计原则 rr
地位 rr
有联系 rr
实施人 rr
受益人 rr
好处 rr
使用阶段 rr
国内现状 rr
应用 rr
用途 rr
有效等价类 rr
无效等价类 rr
划分方法 rr
性质 rr
主要活动 rr
框架组成 rr
必要准备 rr
着眼于 rr
忽视 rr
测试角度 rr
注重于 rr
测试技巧 rr
用例设计方法 rr
出发点 rr
工具 rr
重心 rr
前提 rr
实例 rr
关键 rr
步骤 rr
所持标准 rr
使用技术 rr
组装方式 rr
方式选择 rr
完成标准 rr
报告内容 rr
需求来源 rr
工件清单 rr
方案 rr
测试空间 rr
起源 rr
异常情况 rr
背景 rr
接口分类 rr
使用范围 rr
形式 rr
入口 rr
建立 rr
使用条件 rr
硬件种类 rr
管理对象 rr
阶段 rr
过程管理 rr
统计维度 rr
统计方法 rr
注意点 rr
停止条件 rr
指标选取 rr
四步走 rr
扩容手段 rr
行业标准 rr
需要 rr
测试策略 rr
取向 rr
三个维度 rr
要求 rr
方法体系 rr
要素 rr
层级 rr
标准 rr
度量 rr
子过程 rr
涉及领域 rr
成熟等级 rr
关键过程 rr
属性 rr
判别 rr
约束种类 rr
约束实施 rr
分析工具 rr
分析目的 rr
监控目的 rr
监控工具 rr
预测内容 rr
预测工具 rr
主要内容 rr
计划内容 rr
方针 rr
类型 rr
成果 rr
基线类型 rr
思路 rr
测试方式 rr
适用于 rr
搭配 rr
程序 rr
函数 rrtt
存在形式 rr
处理内容 rr
第一阶段 rr
类别 rr
构词方式 rr
全称 rr
设计语言 rr
格式 rr
源文件格式 rr
中文名 rr
英文名 rr
运行环境 rr
主要功能 rr
功能 rrtt
组成部分 rr
主要特点 rr
原理 rrtt
有关术语 rr
基于 rr
工作 rr
特性 rr
研究对象 rr
识别语言 rr
形式定义 rr
简介 rrtt
领域 rr
学科 rr
第二阶段 rr
第三阶段 rr
第四阶段 rr
第五阶段 rr
结果 rr
检查 rr
不检查 rr
源程序信息管理方式 rr
常用形式 rr
本质 rr
改进途径 rr
基础 rr
构造元素 rr
具体方法 rr
主旨 rr
研究问题 rr
研究结果 rr
应用方向 rr
相关技术 rr
记录对象 rr
图表 rrtt
概念 rr
具体方面 rr
数学技巧 rr
实现方式 rr
商业用途 rr
医疗软件应用 rr
核能软件应用 rr
信息安全应用 rr
所属学科 rr
名词审定 rr
公布时间 rr
数据定义 rr
含义 rr
阶段划分 rr
计划 rrtt
分析 rrtt
设计 rrtt
编码 rrtt
测试 rrtt
维护 rrtt
设施需求 rr
开发语言 rrtt
常用数据库 rr
专业培养 rr
就业方向 rr
开发工具 rr
行业划分 rr
工作内容 rr
动力 rr
产生动机 rr
方法实现 rr
操作软件 rr
属性设置 rr
定义来源 rr
术语分类 rr
公式 rr
测试步骤 rrtt
基本结构 rr
过程信息 rr
检验内容 rr
存储介质 rr
简述 rr
优势 rr
变体 rr
检测方法 rr
检测工具 rr
攻击方式 rr
检测和预防技术 rr
防范方法 rr
常见漏洞 rr
基本宗旨 rr
做法 rr
核心实践 rr
相关部分 rr
提出者 rr
提出时间 rr
应用学科 rr
表达式 rr
别称 rr
适用领域 rr
工作方法 rr
创始人 rr
变异操作 rr
方向 rr
基本步骤 rr
出现 rr
别名 rr
评价软件产品的FLURPS tt
发现只有最终用户才能发现的错误 tt
从用户角度对软件的功能和性能进行测试 tt
产品的界面和特色 tt
软件产品编码结束之时 tt
模块(子系统)测试完成之后 tt
产品达到一定的稳定和可靠程度之后 tt
alpha test tt
大型通用软件 tt
由一个用户在开发环境下进行的测试 tt
尽可能逼真地模拟实际运行环境 tt
尽可能逼真地模拟用户对软件产品的操作 tt
尽最大努力涵盖所有可能的用户操作方式 tt
不能由程序员或测试员完成 tt
在测试现场立刻反馈给开发人员 tt
有关的手册（草稿）需提前准备 tt
软件测试的第一阶段 tt
开发小组内部 tt
应力测试 tt
软件测试的第一个版本 tt
软件开发初期的版本 tt
软件初具规模版本 tt
贯穿于整个软件定义与开发 tt
提升IT产品的安全质量 tt
尽量在发布前找到安全问题予以修补降低成本 tt
度量安全 tt
发现安全隐患 tt
模式匹配方法：将程序看作字符串 tt
状态机模型：将程序看作状态机 tt
黑盒模型：将程序看作黑盒子 tt
白盒模型：将程序看作路径的组合 tt
测试理论很难适用于安全领域 tt
安全测试基础理论薄弱 tt
当前测试方法缺少理论指导 tt
缺乏技术产品工具 tt
需要考虑所有可能的攻击途径 tt
尽量发现所有可能被攻击者利用的安全隐患 tt
投入时间和人力成本较高 tt
违反权限与能力的约束 tt
核实软件在安装后可立即正常运行 tt
Installing testing tt
首次安装 tt
升级 tt
完整的安装 tt
自定义的安装 tt
磁盘情况不足 tt
缺少目录创建权限 tt
测试安装代码 tt
测试安装手册 tt
安装的整个过程 tt
软件在不同操作系统下安装的过程 tt
安装后的是否能够正常运行 tt
安装后的文件夹及文件是否写进指定的目录 tt
是否能产生正确的目录结构和文件 tt
没有生成多余的目录结构 tt
没有生成多余的文件 tt
没有生成多余的注册表信息 tt
没有生成多余的快捷方式 tt
安装时各选项组合是否符合概要设计说明 tt
软件安装向导的UI测试 tt
安装过程是否可以取消 tt
取消后写入的文件是否如概要设计说明处理 tt
安装过程中意外情况的处理是否符合需求 tt
安装过程是否是可以回溯的 tt
安装过程中是否支持快捷键 tt
快捷键的设置是否符合用户要求 tt
客户端的安装 tt
服务器端的安装 tt
数据库的安装 tt
单机版的安装 tt
网络版的安装 tt
安装手册中的所有步骤得到验证 tt
安装过程中所有缺省选项得到验证 tt
安装过程中所有典型选项得到验证 tt
软件安装后能否正常运行 tt
在所有的运行环境上进行验证 tt
自动安装还是手工配置安装 tt
测试不同的安装组合并验证正确性 tt
安装后动态库是否正确 tt
是否符其他应用造成不正常影响 tt
与web服务是否有冲突 tt
能否识别大部分硬件 tt
对串口硬盘的支持 tt
对常见显卡的支持 tt
对常见声卡的支持 tt
确认打包程序的特性 tt
空间不足时的处理 tt
能否在笔记本上进行正常安装 tt
能否在笔记本上进行正常卸载 tt
卸载过程不得删除系统应保留的用户数据 tt
是否能正常通过程序自带卸载程序卸载 tt
是否能正常通过系统控制面板卸载 tt
是否能正常通过其他自动卸载工具卸载 tt
使用系统自带的添加删除程序的卸载 tt
软件自带的卸载程序 tt
卸载后文件是否全部删除 tt
卸载过程中出现的意外情况的测试 tt
卸载是否支持取消功能 tt
单击取消后软件卸载的情况 tt
升级后的功能是否与需求说明一样 tt
与升级模块相关的模块的功能是否与需求一致 tt
升级安装意外情况的测试 tt
升级界面的UI测试 tt
不同系统间的升级测试 tt
升级程序能否自动检测旧版本 tt
升级程序能否对不同版本的升级有不同的策略 tt
对已经升级的版本再次升级是否能自动识别 tt
当软件有更新时，是否有提示信息 tt
white-box testing tt
一种测试用例设计方法 tt
全面了解程序内部逻辑结构的测试 tt
对所有逻辑路径进行的测试 tt
穷举路径 tt
检查程序的内部结构 tt
检查程序的逻辑 tt
代码检查法 tt
静态结构分析法 tt
静态质量度量法 tt
基本路径测试法 tt
符号测试 tt
程序变异 tt
循环覆盖 tt
基本路径测试 tt
判定/条件覆盖 tt
确定实际运行状态与预期状态是否一致 tt
一个模块中的所有独立路径至少被测试一次 tt
检査程序的内部数据结构 tt
在取值的上下边界及可操作范围内运行所有循环 tt
根据需求说明书制定测试进度 tt
输入测试用例，得到测试结果 tt
静态分析方法 tt
动态分析方法 tt
人工设计测试用例测试 tt
实现完整的白盒覆盖 tt
自动生成大量用例捕捉被忽略错误 tt
军工软件 tt
航天航空软件 tt
工业控制软件 tt
对开发语言的支持 tt
代码覆盖的深度 tt
嵌入式软件的测试 tt
测试的可视化 tt
标准C tt
标准C++ tt
VisualC++ tt
Java tt
VisualJ++ tt
DOS tt
Vxworks tt
Neculeus tt
Linux tt
WindowsCE tt
所有64/32/16位CPU tt
所有64/32/16位MCU tt
PCI/VME/CPCI总线 tt
使测试人员仔细思考软件的实现 tt
检测代码中的每条分支和路径 tt
揭示隐藏在代码中的错误 tt
比较彻底的代码测试 tt
软件最优化 tt
昂贵 tt
无法检测代码中遗漏的路径 tt
无法检测代码中数据敏感性错误 tt
不验证规格的正确性 tt
深入到代码一级的测试 tt
发现问题最早 tt
效果最好 tt
软件开发人员 tt
作为对等价类划分法的补充 tt
其测试用例来自等价类的边界 tt
大量的错误是发生在输入或输出范围的边界上 tt
等价类的每个边界都要作为测试条件 tt
输入和输出等价类的边界 tt
应取刚达到或刚刚超越这个范围的边界的值 tt
选取最大个数或最小个数的值 tt
使输出值达到边界值及其左右的值 tt
应选取有序集合的第一个和最后一个元素 tt
应当选择内部数据结构的边界上的值 tt
评价系统的当前性能 tt
预测系统的未来性能 tt
寻找到瓶颈问题 tt
测试工具 tt
测试数据 tt
业务测试数据 tt
DB2 tt
DCOM tt
ODBC tt
ORACLE tt
NETLoad tt
Corba tt
QARun tt
SAP tt
SQLServer tt
Sybase tt
Telnet tt
TUXEDO tt
UNIFACE tt
WinSock tt
WWW tt
JavaScript tt
Windows tt
UNIX tt
测试过程中对监控对象的灵活应用 tt
测试需求 tt
测试案例制定 tt
测试环境准备 tt
测试脚本录制 tt
编写与调试 tt
脚本分配 tt
回放配置 tt
加载策略 tt
测试执行跟踪 tt
结果分析 tt
定位问题所在 tt
测试报告 tt
测试评估 tt
交易处理性能指标 tt
UNIX资源监控 tt
交易结果 tt
每分钟交易数 tt
交易响应时间 tt
虚拟并发用户数 tt
Testing environment tt
测试运行其上的软件和硬件环境的描述 tt
任何其它与被测软件交互的软件 tt
软件 tt
硬件 tt
网络 tt
数据准备 tt
减少环境的变动对测试工作的不利影响 tt
对测试工作的效率和质量的提高产生积极的作用 tt
Testing plan tt
对整个信息系统应用软件组装测试和确认测试 tt
测试项 tt
被测特性 tt
测试任务 tt
谁执行任务 tt
各种可能的风险 tt
有效预防计划的风险 tt
保障计划的顺利实施 tt
作为测试计划的结果 tt
存储计划执行的细节 tt
存储计划进度表、测试环境等信息 tt
为顾客提供信心 tt
为项目实施建立一个组织模型 tt
定义测试项目中每个角色的责任和工作内容 tt
开发有效的测试模型 tt
确定测试所需要的时间和资源 tt
识别出测试活动中各种风险 tt
消除可能存在的风险 tt
降低由不可能消除的风险所带来的损失 tt
方便领导做宏观调控，进行相应资源配置 tt
具有丰富经验的项目测试负责人 tt
测试需求分析前与测试需求分析后 tt
why—为什么要进行这些测试 tt
what—测试哪些方面，不同阶段的工作内容 tt
when—测试不同阶段的起止时间 tt
who—项目有关人员组成，测试人员安排 tt
要切合实际 tt
要根据实际情况的变化而不断进行调整 tt
TDD tt
一种不同于传统软件开发流程的新型的开发方法 tt
在编写某个功能的代码之前先编写测试代码 tt
只编写使测试通过的功能代码 tt
通过测试来推动整个开发的进行 tt
编写简洁可用和高质量的代码 tt
并加速开发过程 tt
新软件开发 tt
历史系统维护 tt
提高代码的灵活性和健壮性 tt
使代码能快速响应变化 tt
快速新增一个测试 tt
运行所有的测试，发现新增的测试不能通过 tt
做一些小小的改动，尽快地让测试程序可运行 tt
运行所有的测试，并且全部通过 tt
重构代码，以消除重复设计，优化设计结构 tt
更符合后期开发的需求 tt
可以及时响应需求变更 tt
提高系统的可扩展性和抗变性 tt
能快速获得反馈 tt
尽量地避免和尽早地发现错误 tt
极大地降低了后续测试及修复的成本 tt
提高了软件产品的质量 tt
使代码具有重构的可靠性 tt
是比较好的开发者文档 tt
提高我们对代码的信心 tt
提高了开发效率 tt
得到越来越广泛的重视 tt
相关应用并不是很成熟 tt
有效地避免过度设计带来的浪费 tt
让开发者在开发中拥有更全面的视角 tt
忽略了对实际需求的实现 tt
会放慢开发实际代码的速度 tt
导致单元测试的覆盖度不够 tt
Test Case tt
对一项特定的软件产品进行测试任务的描述 tt
体现测试方案、方法、技术和策略 tt
测试目标 tt
输入数据 tt
预期结果 tt
测试脚本 tt
用于核实是否满足某个特定软件需求 tt
将软件测试的行为活动做一个科学化的组织归纳 tt
将软件测试的行为转化成可管理的模式 tt
黑盒测试法 tt
白盒测试法 tt
等价类划分法 tt
边界值分析法 tt
错误推测法 tt
指导测试的实施 tt
规划测试数据的准备 tt
编写测试脚本的"设计规格说明书" tt
评估测试结果的度量基准 tt
分析缺陷的标准 tt
测试情况 tt
测试结果文档 tt
一组或若干组测试原始数据 tt
标准测试结果 tt
大量边缘数据 tt
大量错误数据 tt
构成了设计和制定测试过程的基础 tt
测试的“深度”与测试用例的数量成比例 tt
测试工作量与测试用例的数量成比例 tt
按功能设置用例 tt
按路径设置用例 tt
按功能、路径混合模式设置 tt
基本事件 tt
备选事件 tt
异常事件 tt
正确性 tt
全面性 tt
连贯性 tt
判定性 tt
可操作性 tt
测试用例的评审 tt
测试用例的修改更新 tt
测试用例的管理软件 tt
Code review tt
代码检查方式 tt
检查其编写正确与否 tt
找编译器中的设计陷阱 tt
检查是否符合编程规范 tt
寻找编译器中的设计陷阱 tt
快速理解源代码，找出流程设计中的问题 tt
对原有代码的重构 tt
unit testing tt
对最小可测试单元进行检查和验证 tt
根据实际情况去判定其具体含义 tt
为产品工程建立对应的测试工程 tt
为每个类建立对应的测试类 tt
为每个函建立测试函数 tt
专门编写测试代码 tt
产品代码隔离 tt
以函数作为单元测试的测试单位 tt
用测试类来组织某个类的所有测试函数 tt
软件开发过程中最低级别的测试 tt
一个在早期抓住Bug的机会 tt
与程序的其他部分相隔离测试 tt
被测代码的一个很小很明确的功能 tt
测试C语言的函数或子过程 tt
测试C++的类 tt
测试Ada语言的独立过程、函数或包 tt
测试4GL的菜单或显示界面 tt
判断某个特定条件下某个特定函数的行为 tt
证明代码的行为和期望的一致 tt
提高软件质量 tt
降低开发成本 tt
帮我们充分了解代码的用法 tt
程序员 tt
写出高质量的代码 tt
提高编程水平 tt
在开发之前编写测试代码和测试用例 tt
每完成一个功能补充测试用例 tt
创建更简单 tt
维护更容易 tt
更方便地进行重复 tt
所需的费用低 tt
使效率和质量得到最好的保证 tt
系统集成过程将会大大简化 tt
它是一种验证行为 tt
为以后的开发提供支援 tt
可以在开发后期轻松地增加功能 tt
可以在开发后期更改程序结构 tt
为代码的重构提供了保障 tt
它是一种设计行为 tt
迫使我们解除软件中的耦合 tt
它是一种编写文档的行为 tt
是展示函数或类如何使用的最佳文档 tt
是保持最新、与代码同步的文档 tt
它具有回归性 tt
避免了代码出现回归 tt
可以随时随地的快速运行测试 tt
值得依赖 tt
AdaTEST tt
Cantata tt
CppUnit tt
C++Test tt
VisualUnit tt
gtest tt
JUnit tt
JUnit-addons tt
Spring测试框架 tt
EasyMock tt
DJUnit tt
走过场、很不正规 tt
极限编程 tt
语言层单元测试支持 tt
一种典型的、重要的黑盒测试方法 tt
一种系统性的确定要输入的测试条件的方法 tt
解决如何选择适当的数据子集来代表整个数据集 tt
发现更多的软件缺陷 tt
降低测试的数目去实现“合理的”覆盖 tt
将程序所有可能的输入数据划分成若干个等价类 tt
由有效等价类与无效等价类的代表组成 tt
设计测试用例可以不考虑程序的内部结构 tt
需求规格说明书 tt
组件测试 tt
设计出完备的测试用例 tt
减少设计一些不必要的测试用例 tt
使测试对象得到同样的反映行为 tt
终端用户输入的命令 tt
与最终用户交互的系统提示 tt
接受相关的用户文件的名称 tt
提供初始化值和边界等 tt
提供格式化输出数据的命令 tt
在图形模式提供的数据 tt
失败时显示的回应消息 tt
在一个不正确的地方提供适当的值 tt
验证边界值 tt
验证外部边界的值 tt
用户输入的命令 tt
最终用户与系统交互的提示 tt
验证与边界和外部边界值的数值数据 tt
按区间划分 tt
按数值划分 tt
按数值集合划分 tt
按限制条件或规划划分 tt
按处理方式划分端到端测试 tt
软件测试方法 tt
从头到尾验证整个软件及其与外部接口的集成 tt
验证来自其他上/下游系统的批/数据处理 tt
检测问题 tt
增加子系统的测试覆盖率 tt
测试整个软件的依赖性 tt
测试整个软件的数据完整性 tt
测试软件与其他系统、接口和数据库等的通信 tt
模拟完整的生产场景 tt
验证完整的系统流程 tt
确保交付的系统与其子系统良好协助 tt
识别异构环境中的问题 tt
在功能测试和系统测试之后 tt
研究端到端测试需求 tt
测试环境及硬件/软件要求 tt
描述所有系统及其子系统流程 tt
说明所有系统的角色和职责 tt
测试方法和标准 tt
端到端的需求对应的测试用例的设计 tt
每个系统的输入和输出数据 tt
整理用户功能 tt
列出条件 tt
写测试用例 tt
列出系统的特性及其关联组件 tt
列出每个特性输入数据、动作和输出数据。 tt
确定各特性之间的关系 tt
确定该特性是否可以重用或独立使用。 tt
测试用例准备状态 tt
每周测试进度 tt
每周的测试完成百分比的细节 tt
BUG状态和细节 tt
每周的缺陷分布情况 tt
环境可用率 tt
UNIX资源监控指标和描述 tt
监控指标 tt
平均负载 tt
冲突率 tt
进程/线程交换率 tt
CPU利用率 tt
磁盘交换率 tt
接收包错误率 tt
包输入率 tt
中断速率 tt
输出包错误率 tt
包输出率 tt
读入内存页速率 tt
写出内存页速率 tt
内存页交换速率 tt
进程入交换率 tt
进程出交换率 tt
系统CPU利用率 tt
用户CPU利用率 tt
磁盘阻塞 tt
Load testing tt
评估性能特征 tt
评估响应时间 tt
评估事务处理速率 tt
监控系统所占用资源的情况 tt
模拟实际软件系统所承受的负载条件的系统负荷 tt
通过加载来观察不同负载下系统的响应时间 tt
通过加载来观察不同负载下系统的数据吞吐量 tt
发现设计上的错误或验证系统的负载能力 tt
评测持续正常运行的能力 tt
发现软件系统中存在的性能瓶颈 tt
发现软件系统中存在的内存泄漏 tt
发现软件系统中存在的不能实时同步的问题 tt
获得系统正常工作时所能承受的最大负载 tt
使测试对象承担不同的工作量 tt
了解相关知识 tt
确定用户数量 tt
研究分析 tt
组建团队 tt
准备浏览器 tt
准备测试应用 tt
预留时间分析结果 tt
预留时间修改 tt
计划一个敏捷测试方法 tt
检测每个功能是否都能正常使用的测试 tt
对产品的各功能进行验证的测试 tt
完全不考虑程序内部结构和特性进行的测试 tt
确保程序以期望的方式运行的测试 tt
按功能要求进行的测试 tt
产品特性 tt
操作描述 tt
根据测试用例进行逐项测试 tt
测试一个产品的特性和可操作行为 tt
检查程序的功能是否符合它的功能说明 tt
只检查是否能适当接收输入数据产生正确的输出 tt
从输入与输出的对应关系测试 tt
接受性测试 tt
菜单测试 tt
帮助测试 tt
RTM测试 tt
程序外部结构 tt
内部逻辑结构 tt
软件界面 tt
软件功能 tt
外部特性本身设计不能有问题 tt
规格说明的规定不能有误 tt
只能采用穷举输入测试 tt
考虑所有可能的输入进行测试 tt
要测试所有合法的输入 tt
要测试不合法但可能的输入 tt
Black Box Testing tt
计算机 tt
发现软件错误 tt
发现是否有功能错误 tt
发现是否有功能遗漏 tt
发现是否能正确地接收输入数据 tt
发现是否能产生正确的输出结果 tt
发现是否有数据结构错误 tt
发现是否有外部信息访问错误 tt
发现是否有程序初始化的错误 tt
发现是否有程序终止的错误 tt
用户 tt
测试软件的功能性需求 tt
软件测试的各个阶段 tt
验收测试 tt
发现功能不正确或遗漏 tt
发现数据库访问错误 tt
发现性能错误 tt
发现初始化和终止错误 tt
进行有针对性的测试 tt
制定测试案例指导测试的实施 tt
用测试用例将测试行为具体量化 tt
正交试验设计法 tt
功能图法 tt
定义相应的测试需求报告 tt
适当选择测试内容 tt
合理安排测试人员 tt
合理安排测试时间 tt
合理安排测试资源 tt
测试需求分解、细化为若干个可执行的测试过程 tt
为每个测试过程选择适当的测试用例 tt
建立可重复使用的自动测试过程 tt
执行测试开发阶段建立的自动测试过程 tt
对所发现的缺陷进行跟踪管理 tt
对于应用软件的质量进行综合评价 tt
对于开发团队的工作进度进行综合评价 tt
对于开发团队的工作效率综合评价 tt
从用户角度考察被测系统功能性需求实现情况 tt
适用于功能测试 tt
适用于可用性测试 tt
适用于可接受性测试 tt
对照说明书测试程序功能 tt
可测试长的、复杂的程序的工作逻辑 tt
易被理解 tt
不可能进行完全的输入测试 tt
无法检测一些软件Bug tt
无法检测人为设置的故障 tt
依赖于规格说明书的正确性 tt
软件产品的界面、架构 tt
结果取决于测试例的设计 tt
没有状态转换的概念 tt
难以寻找和确定造成程崩溃的测试用例 tt
Win Runner tt
可用性 tt
边界条件 tt
性能 tt
错误恢复 tt
安全性测试 tt
Regression Testing tt
修改旧代码后重新进行测试 tt
补充新的测试用例来测试新的或被修改了的功能 tt
对测试用例库进行维护 tt
依据一定的策略选择相应的回归测试包。 tt
删除过时的测试用例 tt
改进不受控制的测试用例 tt
删除冗余的测试用例 tt
增添新的测试用例 tt
确定修改是否达到了预期的目的 tt
检查修改是否损害了原有的正常功能 tt
验证修改是否破坏了现有的功能 tt
验证修改工作本身是否正确 tt
大幅降低系统测试、维护升级等阶段的成本 tt
软件生命周期的一个组成部分 tt
在整个软件测试过程中占有很大的工作量比重 tt
软件开发的各个阶段都会进行 tt
新版本的连续发布使其进行的更加频繁 tt
极端编程要求每天都进行若干次回归测试 tt
软件测试中的一个十分重要且成本昂贵的过程 tt
回归测试选择技术是国际上研究的热点 tt
重复以前的全部或部分的相同测试。 tt
以关键性模组为核心 tt
充足的时间 tt
充足的经费 tt
充足的人力 tt
效率 tt
有效性 tt
发生的修改一定要在本测试阶段内完成回归 tt
回归测试期间应对该软件版本冻结 tt
再测试全部用例 tt
基于风险选择测试 tt
基于操作剖面选择测试 tt
再测试修改的部分 tt
通过自动测试来实现重复的和一致的回归测试 tt
必须补充新的测试用例使覆盖率达到规定的要求 tt
识别出软件中被修改的部分 tt
排除所有不再适用的测试用例 tt
确定那些对新的软件版本依然有效的测试用例 tt
从原用例集中选择测试用例测试被修改的软件 tt
用新用例集执行修改后的软件 tt
重复性较多 tt
Benchmark Test tt
BMT tt
设计科学的测试方法 tt
设计科学的测试方法、测试工具和测试系统 tt
计算机CPU进行浮点运算的基准测试 tt
数据访问的带宽和延迟的基准测试 tt
对数据库管理系统的ACID的基准测试 tt
对数据库管理系统的查询时间的基准测试 tt
可测量 tt
可重复 tt
可对比 tt
确定应用程序中是否出现性能倒退 tt
可以在一个相对短的时间内收集可重复的结果 tt
每次测试改变一个且只改变一个参数 tt
要获得一致的、可再现的结果 tt
确定服务器预期任务 tt
为测试创建一个基本的目标 tt
对服务器基准测试做大体预测 tt
变量设置 tt
测试并确认应用程序的实际性能 tt
不能替代好的设计 tt
将所有模块按照设计要求组装成为子系统或系统 tt
通过使用要求在组合单元前测试每个单元 tt
确保每个单元的生存能力的测试计划 tt
测试软件单元的组合能否正常工作 tt
测试软件单元与其他组的模块能否集成起来工作 tt
测试构成系统的所有模块组合能否正常工作 tt
测试组合单元时出现的问题 tt
将可能发生的情况数量减少到更简单的分析级别 tt
解决相关的软件与其它系统的兼容性 tt
解决可操作性的问题 tt
间接地验证概要设计是否具有可行性 tt
确保增量的行为正确 tt
完成单元测试 tt
已经经过单元测试的软件单元 tt
《软件概要设计规格说明》 tt
功能性测试 tt
非功能性测试 tt
单元间的接口 tt
集成后的功能 tt
模块和子系统 tt
考虑采用何种系统组装方法来进行组装测试； tt
考虑组装测试过程中连接各个模块的顺序 tt
考虑测试过程中是否需要专门的硬件设备 tt
列出各个模块的编制 tt
列出测试计划表 tt
标明每个模块单元测试完成的日期 tt
标明首次集成测试的日期 tt
标明集成测试全部完成的日期 tt
标明需要的测试用例 tt
标明所期望的测试结果 tt
考虑测试所需软件的准备情况 tt
一次性组装方式 tt
增值式组装方式 tt
影响模块测试用例的形式 tt
影响所用测试工具的类型 tt
影响模块编号 tt
影响测试的次序 tt
影响生成测试用例 tt
影响调试的费用 tt
成功地执行了测试计划中规定的所有集成测试 tt
修正了所发现的错误 tt
测试结果通过了专门小组的评审 tt
系统设计人员 tt
记录实际的测试结果 tt
记录在测试中发现的问题 tt
记录解决问题的方法 tt
记录解决问题后再次测试的结果 tt
提出不能解决、还需要注意的一些问题 tt
提供测试评审 tt
提供最终决策 tt
提出处理意见 tt
确定被测试对象和测试范围 tt
评估集成测试被测试对象的数量及难度 tt
确定角色分工和作任务 tt
标识出测试各阶段的时间、任务、约束等条 tt
考虑一定的风险分析及应急计划 tt
考虑外部技术支援的力度和深度 tt
定义测试完成标准 tt
被测对象结构分析 tt
集成测试模块分析 tt
集成测试接口分析 tt
集成测试策略分析 tt
集成测试用例设计 tt
集成测试代码设计 tt
集成测试脚本 tt
集成测试工具 tt
执行集成测试用例 tt
回归集成测试用例 tt
撰写集成测试报告 tt
设计模型 tt
集成构件计划 tt
软件集成测试计划 tt
集成测试用例 tt
测试过程 tt
测试日志 tt
测试评估摘要 tt
自底向上集成测试 tt
自顶向下集成测试 tt
Big-Bang集成测试 tt
三明治集成测试 tt
核心集成测试 tt
分层集成测试 tt
基于使用的集成测试 tt
概括设计 tt
内部实现层的测试空间 tt
compatibility tt
某个软件能稳定地工作在若干个操作系统之中 tt
软件共享时几个软件之间无需复杂的转换 tt
PC机的方便组装 tt
PC机的易扩充性 tt
电脑的普及 tt
不同厂商生产的产品的不兼容和组合的需要 tt
向上兼容 tt
硬件兼容 tt
向下兼容 tt
内存与主板不兼容 tt
键盘与主板不兼容 tt
显卡与主板不兼容 tt
硬盘与主板不兼容 tt
声卡与主板不兼容 tt
网卡与主板不兼容 tt
BIOS与主板不兼容 tt
显示器与主板不兼容 tt
打印机与主板不兼容 tt
光驱与主板不兼容 tt
主板与机箱不兼容 tt
移动设备与USB不兼容 tt
电源与主板不兼容 tt
耳麦与声卡或主板不兼容 tt
软驱与机箱不兼容 tt
Robustness Testing tt
设计者很容易忽略系统关于容错方面的功能 tt
项目开发 tt
系统容错性差也成为软件危机中的一个主要原因 tt
对关键进程或线程杀死，然后观察系统行为 tt
对关键进程或线程挂起，然后观察系统行为 tt
网络不通，然后观察系统行为 tt
数据库不通，然后观察系统行为 tt
Interface Testing tt
测试系统组件间接口的一种测试 tt
检查数据的交换、传递和控制管理过程 tt
检查系统间的相互逻辑依赖关系 tt
接口参数传递的正确性 tt
接口功能实现的正确性 tt
输出结果的正确性 tt
各种异常情况的容错处理 tt
检查数据的交换 tt
传递和控制管理过程 tt
系统与系统之间的调用 tt
同一系统内部上层服务对下层服务的调用 tt
能够提早发现bug tt
低成本高效益 tt
从用户的角度对系统接口进行全面检测 tt
边界值法 tt
等价类法 tt
多系统间交互开发的测试 tt
拥有多个子系统的应用系统开发的测试 tt
为其他系统提供服务的底层框架系统的测试 tt
为其他系统提供服务的中心服务系统的测试 tt
早期的纸上原型测试 tt
后期成品的测试 tt
人因工程 tt
专家评估 tt
用户评估 tt
形成性评估 tt
总结性评估 tt
认知预演 tt
启发式评估 tt
用户测试法 tt
考察客户端应用的性能 tt
客户端 tt
疲劳强度测试 tt
大数据量测试 tt
速度测试 tt
条件桩 tt
动作桩 tt
条件项 tt
动作项 tt
规则 tt
确定规则的个数 tt
出所有的条件桩和动作桩 tt
填入条件项 tt
填入动作项 tt
制定初始判定表 tt
简化，合并相似规则或者相同动作 tt
规格说明以判定表的形式给出或易转换成判定表 tt
条件的排列顺序不影响执行操作 tt
规则的排列顺序不影响执行操作 tt
同一规则多个操作的执行顺序无关紧要 tt
Configuration Test tt
指电脑硬件测试 tt
对被测系统软硬件环境的调整 tt
了解各种不同环境对系统性能影响的程度 tt
找到系统各项资源的最优分配原则 tt
PC tt
组件 tt
外围设备 tt
接口 tt
选项和内存 tt
设备驱动 tt
测试方案 tt
测试版本 tt
测试结果 tt
控制和审计测试活动的变更 tt
随着测试项目的里程碑，同步建立相应的基线 tt
记录并且跟踪测试活动过程中的变更请求 tt
需求阶段，要进行客户需求调研和软件需求分析 tt
设计阶段，要进行概要设计和详细设计工作 tt
编码阶段，主要进行的工作是编码 tt
测试和试运行阶段 tt
正式运行及维护阶段 tt
建立配置控制委员会 tt
SCM库的建立和使用 tt
配置状态报告 tt
审、审计和发布过程 tt
一般在对系统性能状况有初步的了解后进行 tt
一般用于测试用户性能调优和规划能力 tt
性能测试里的一种测试方法 tt
测量系统的最大容量 tt
为系统扩容，性能优化提供参考 tt
节省成本投入 tt
提高资源利用率 tt
最大负载状态 tt
内存使用达到最大值 tt
磁盘I/O演示超过所能接收的最大时延 tt
磁盘使用率超过最大限制 tt
网络使用率达到上限 tt
最大接收阈值 tt
响应时间 tt
事物成功率 tt
超时/异常错误率 tt
配置参数 tt
埋点采集 tt
日志/数据库 tt
Agent/探针 tt
一定要采集线上的真实数据 tt
测试环境的配置一定要和线上保持一致 tt
某项指标达到最大可接受阈值 tt
某项资源达到最大使用状态 tt
数据密集型 tt
数据存储型 tt
业务流量预估阶段 tt
系统容量评估阶段 tt
系统容量测试阶段 tt
流量分配调整阶段 tt
垂直扩容 tt
水平扩展 tt
Software Testing tt
避免错误的发生 tt
确保应用程序正常高效地运行 tt
发现至今未发现的错误 tt
帮助开发人员分析问题 tt
检查该软件是否符合客户要求的产品设计 tt
检查是否能够符合大多数用户的使用习惯 tt
鉴定软件 tt
审核软件 tt
检验软件系统是否满足需求 tt
需求分析得到的文档 tt
概要设计得到的文档 tt
详细设计得到的文档 tt
程序编码得到的文档 tt
需求规格说明 tt
概要设计规格说明 tt
详细设计规格说明 tt
需求理解与表达的正确性 tt
设计与表达的正确性 tt
实现的正确性 tt
运行的正确性 tt
不完全原则 tt
尽早和不断地进行软件测试 tt
避免由程序员检查自己的程序 tt
样例由输入数据、执行步骤和预期输出结果组成 tt
样例要确保能覆盖所有可能路径 tt
包括合理的输入条件 tt
包括不合理的输入条件 tt
充分注意测试中的群集现象 tt
对错误群集的程序段进行重点测试 tt
严格执行测试计划 tt
排除测试的随意性 tt
严格执行计划中所测软件的功能 tt
严格执行计划中的输入和输出 tt
严格执行计划中的测试内容 tt
严格执行计划中各项测试的进度安排 tt
严格执行计划中的资源要求 tt
严格执行计划中的测试资料 tt
严格执行计划中的测试工具 tt
严格执行计划中测试用例的选择 tt
严格执行计划中测试的控制方法和过程 tt
严格执行计划中系统的配置方式 tt
严格执行计划中的跟踪规则 tt
严格执行计划中的调试规则 tt
严格执行计划中回归测试的规定 tt
对每一个测试结果做全面的检查 tt
妥善保存测试计划 tt
妥善保存测试样例 tt
妥善保存出错统计 tt
妥善保存最终分析报告 tt
实际输出与预期输出之间的审核或者比较的过程 tt
人工操作 tt
软件自动运行 tt
伴随着软件的产生而产生的 tt
软件开发编程行业高度成熟后所形成的产物 tt
IEEE/ANSI tt
运用专门的方法和手段 tt
专门人才和专家来承担 tt
静态测试方法 tt
动态测试 tt
software metric tt
改进软件开发过程 tt
促进项目成功 tt
开发高质量的软件产品 tt
顾客满意度度量 tt
质量度量 tt
项目度量 tt
品牌资产度量 tt
知识产权价值度量 tt
事实 tt
数据 tt
法则 tt
审核 tt
调查 tt
统计 tt
数字 tt
模型 tt
通用度量工具 tt
小生境度量工具 tt
源代码静态分析 tt
规模度量 tt
产品度量 tt
过程度量 tt
度量软件开发过程中的不同阶段的费用 tt
度量不同小组职员的生产率 tt
度量开发的产品的质量 tt
决定项目的度量目标 tt
反复测试某一特定过程和资源的属性 tt
度量和估计不同软件工程方法和工具的效用 tt
制定过程度量以监视不断演进的系统 tt
度量产品和过程的属性 tt
成本度量 tt
功能性 tt
可靠性 tt
易用性 tt
效率性 tt
可维护性 tt
可移植性 tt
第一层：质量要素 tt
第二层：衡量标准 tt
第三层：量度标准 tt
精确性 tt
稳健性 tt
安全性 tt
通信有效性 tt
处理有效性 tt
设备有效性 tt
培训性 tt
完备性 tt
一致性 tt
可追踪性 tt
可见性 tt
硬件系统无关性 tt
软件系统无关性 tt
可扩充性 tt
公用性 tt
模块性 tt
清晰性 tt
自描述性 tt
简单性 tt
结构性 tt
文件完备性 tt
完整性 tt
可测试性 tt
互操作性 tt
适应性 tt
可重用性 tt
明确性 tt
可变更性 tt
文档化 tt
恢复力 tt
易懂性 tt
普遍性 tt
经济性 tt
Software Process tt
一个为建造高质量软件所需完成的任务的框架 tt
形成软件产品的一系列步骤 tt
软件生存周期所涉及的一系列相关过程 tt
中间产品 tt
资源 tt
角色 tt
过程中采取的方法 tt
过程中采取的工具 tt
UP tt
TheOPENProcess tt
OOSP tt
基本过程类 tt
支持过程类 tt
组织过程类 tt
文档过程 tt
配置管理过程 tt
质量保证过程 tt
验证过程 tt
确认过程 tt
联合评审过程 tt
审计过程 tt
问题解决过程 tt
获取过程 tt
供应过程 tt
开发过程 tt
运作过程 tt
维护过程 tt
管理过程 tt
基础设施过程 tt
改进过程 tt
培训过程 tt
工程开发 tt
工程支持 tt
工程管理 tt
理解软件开发的基本原则 tt
帮开发人员做出明智的决定 tt
标准化你的工作 tt
提高软件的可重用性 tt
提高团队间的协作 tt
接收新的、最好的软件开发经验 tt
改善开发人员对软件的维护 tt
有效地定义如何管理需求变更 tt
提高组织的生产能力 tt
初始级 tt
可重复级 tt
定义级 tt
定量管理级 tt
优化级 tt
需求管理 tt
软件项目计划 tt
软件项目控制 tt
软件获取管理 tt
软件质量保证 tt
软件组配管理 tt
企业对过程的重视 tt
企业过程定义 tt
企业的培训方案 tt
集成化的软件管理 tt
软件产品工程 tt
项目间的协调 tt
交换审核 tt
企业软件资产共通性 tt
企业过程表现 tt
统计法过程管理 tt
缺陷预防 tt
企业过程与技术创新 tt
企业改进开展 tt
操作系统兼容性 tt
异构数据库兼容性 tt
新旧数据转换 tt
异种数据兼容性 tt
应用软件兼容性 tt
硬件兼容性 tt
data integrity tt
存储在数据库中的所有数据值均正确的状态 tt
实体完整性 tt
域完整性 tt
参照完整性 tt
用户自定义完整性 tt
保证输入的数据符合规定 tt
实体完整性约束 tt
参照完整性约束 tt
函数依赖约束 tt
统计约束 tt
静态约束 tt
固定约束 tt
隐含约束 tt
显示约束 tt
动态约束 tt
利用成熟先进的自动化技术进行网络预测 tt
ApplicationExpert tt
解决客户端对数据库服务器运行了不必要的请求 tt
在投产前预测应用的响应时间 tt
了解网络上正在发生的事情 tt
了解网络上在运行的程序、如何运行 tt
了解网络上正在访问LAN或WAN的PC tt
了解哪些应用程序导致系统瓶颈或资源竞争 tt
维持系统的正常稳定运行 tt
NetworkVantage tt
网络流量的变化 tt
网络结构的变化 tt
PREDICTOR tt
设置服务水平 tt
完成日网络容量规划 tt
离线测试网络 tt
网络失效和容量极限分析 tt
完成日常故障诊断 tt
System Testing tt
对整个系统的测试 tt
将硬件、软件、操作人员看作一个整体 tt
检验系统是否有不符合系统说明书的地方 tt
发现系统分析和设计中的错误 tt
验证最终软件系统是否满足用户规定的需求 tt
发现软件潜在的问题 tt
保证系统的正常运行 tt
确保系统测试的活动是按计划进行的 tt
建立完善的系统测试缺陷记录跟踪库 tt
制定系统测试计划 tt
项目经理审批系统测试计划 tt
撰写测试需求分析、用例 tt
依据系统测试计划和用例执行系统测试 tt
测试结果记录在系统测试报告中 tt
用缺陷管理工具来管理所发现的缺陷 tt
缺陷管理与改错 tt
指定缺陷管理工具，记录缺陷的状态信息 tt
开发人员及时消除已经发现的缺陷 tt
开发人员消除缺陷之后应当马上进行回归测试 tt
测试范围 tt
测试环境与辅助工具 tt
测试完成准则 tt
人员与任务表 tt
测试机构要独立 tt
精心设计测试计划 tt
进行回归测试 tt
遵从经济性原则 tt
遵循文档化的标准和过程 tt
定期的对系统测试活动及结果进行评估 tt
performance testing tt
应用在客户端性能的测试 tt
应用在网络端性能的测试 tt
应用在服务器端性能的测试 tt
验证软件系统是否能够达到用户提出的性能指标 tt
优化软件 tt
优化系统 tt
评估系统的能力 tt
识别体系中的弱点 tt
系统调优 tt
检测软件中的问题 tt
验证稳定性和可靠性 tt
争用测试 tt
性能配置 tt
性能评价 tt
性能规划测试 tt
渗入测试 tt
峰谷测试 tt
bs tt
cs tt
Avg Rps:平均每秒钟响应次数 tt
FailedRounds：失败的请求 tt
FailedHits：失败的点击次数 tt
HitsPerSecond：每秒点击次数 tt
制定目标和分析系统 tt
选择测试度量的方法 tt
学习的相关技术和工具 tt
制定评估标准 tt
设计测试用例 tt
运行测试用例 tt
分析测试结果 tt
对于不同的系统，性能关注点是有所区别 tt
查找瓶颈的过程应由易到难逐步排查 tt
调优过程中应仔细进行记录 tt
性能调优需要多思考、分析、交流和积累 tt
了解“有限的资源，无限的需求” tt
尽可能在开始前明确调优工作的终止标准 tt
LoadRunner tt
PerformanceRunner tt
确保软件满足或超过设计的期望值 tt
分析应用程序的性能以发现潜在的问题 tt
查应用程序以确保每个组件有效地工作 tt
根据设计密切注视处理器的使用 tt
根据设计密切注视网络和系统服务 tt
根据设计密切注视存储和输入/输出 tt
保应用程序的行为按设计如期进行 tt
显示导致大量的处理开销的原 tt
显示导致大量的文件争用的原因 tt
显示导致大量的磁盘或网络访问过度延迟的原因 tt
一般性能分析器 tt
函数调用图性能分析器 tt
以事件为基础的性能分析器 tt
统计式的性能分析器 tt
插装型的性能分析器 tt
解释器式的插装 tt
hypervisor tt
为软件提供较佳的性能 tt
用于处理系统响应速度太慢的情况 tt
备援回滚 tt
提高系统可获得性 tt
系统响应速度太慢 tt
每秒所完成的系统输出/入低于预期 tt
相同的环境，但每秒钟所完成的批操作较先前少 tt
系统资源长时间处于耗尽的状态 tt
评估性能的程序 tt
真实应用程序的片段功能 tt
各种资源的性能监视程序 tt
压力测试程序 tt
调校前系统的各种数据 tt
昔日系统正常运行时的数据 tt
用户希望达到的目标 tt
测试软件可靠性 tt
测试软件能够承受的用户访问量 tt
发现性能缺陷 tt
参数化登录用户的身份 tt
一种基本的质量保证行为 tt
每个重要软件测试工作的一部分 tt
内部内存 tt
CPU可用性 tt
磁盘空间 tt
网络带宽 tt
给软件不断加压 tt
强制其在极限的情况下运行 tt
观察它可以运行到何种程度 tt
搭建与实际环境相似的测试环境 tt
测试系统在不同压力情况下的效率状况 tt
测试系统可以承受的压力情况 tt
做针对性的测试与分析 tt
找到影响系统性能的瓶颈 tt
评估系统在实际使用环境下的效率情况 tt
评价系统性能 tt
判断是否需要对应用系统进行优化处理 tt
判断是否需要对应用系统进行结构调整 tt
对系统资源进行优化 tt
编写压力测试计划 tt
编写压力测试案例 tt
多进程模拟多用户 tt
设置并发点 tt
运行测试程序 tt
监测系统资源 tt
分析结果 tt
优化调整设置 tt
提交测试报告 tt
手工测试 tt
利用自动化工具测试 tt
Causalitychart tt
图解法 tt
分析输入条件的各种组合情况 tt
设计测试用例的方法 tt
检查程序输入条件涉及的各种组合情况 tt
判定表 tt
同时发生相互影响的多个输入 tt
按照一定的步骤选择一组高效的测试用例 tt
指出程序规范中存在的问题 tt
鉴别和制作因果图 tt
分析输入条件的各种组合 tt
分析软件规格说明的描述中的因与果 tt
给每个原因和结果并赋予一个标识符 tt
根据所得的因果关系，画出因果图 tt
因果图上用一些记号表明约束条件或限制条件 tt
对需求加以分析 tt
将需求表示为因果图之间的关系图 tt
把因果图转换成判定表 tt
将判定表的每一列作为依据，设计测试用例 tt
Userinterfacetesting tt
测试用户界面的功能模块的布局是否合理 tt
测试整体风格是否一致 tt
测试各个控件的放置位置是否符合客户使用习惯 tt
测试操作是否便捷 tt
测试导航是否简单易懂 tt
测试界面文字是否正确 tt
测试命名是否统一 tt
测试页面是否美观 tt
测试文字、图片组合是否完美 tt
确保用户界面符合公司或行业的标准 tt
确保UI功能内部的对象符合预期要求 tt
确保UI功能内部的对象遵循公司或行业的标准 tt
确保浏览测试对象可正确反映业务的功能和需求 tt
确保窗口的对象和特征都符合标准 tt
静态测试 tt
点检表测试 tt
编写测试用例 tt
证实各个窗口都与基准版本保持一致 tt
证实各个窗口符合可接受标准 tt
导航测试 tt
图形测试 tt
内容测试 tt
表格测试 tt
整体界面测试 tt
lexicalanalysis tt
将字符序列转换为单词（Token）序列 tt
单词生成器 tt
单词化 tt
字符串 tt
morpheme tt
语言学范畴术语 tt
不同语言体系表达形式不同 tt
最小的语法单位 tt
单音节语素 tt
双音节语素 tt
多音节语素 tt
C语言 tt
LEX源文件 tt
LEX tt
生成词法分析器的工具 tt
快速词法分析器生成器 tt
词法分析器生成器 tt
Unix环境 tt
Linux环境 tt
生成一个词法分析器的C源码 tt
对输入字符流进行词法处理 tt
declarations tt
translationrules tt
auxiliaryprocedures tt
Lexicalanalyzer tt
不依靠语法，而只依靠词法 tt
已知文法利用递归向下分析 tt
语法分析器 tt
低级别的分析 tt
将字符或者字符序列转化成记号 tt
Lex词法分析器 tt
Flex词法分析器 tt
组织输入 tt
扫描 tt
输出 tt
易于维护 tt
整个编译器结构简捷、清晰 tt
可以采用有效的方法和工具进行处理 tt
finitestatemachine tt
自动机理论 tt
正规语言 tt
具有离散输入和输出的系统的一种数学模型 tt
系统中有一个状态，它是系统的开始状态 tt
接受器判断是否接受输入 tt
转换器对给定输入产生一个输出 tt
Moore机 tt
Mealy机 tt
确定 tt
非确定 tt
compilation tt
编译程序 tt
编写的源程序产生目标程序的过程 tt
编译原理 tt
计算机科学 tt
用编译程序产生目标程序的动作 tt
语义检查 tt
中间代码生成 tt
语法检查和最简单的语义检查 tt
程序的逻辑 tt
表格管理 tt
IntermediateLanguage tt
逆波兰表示 tt
四元式 tt
三元式 tt
与具体机器特性无关 tt
可对中间语言进行与机器无关的优化 tt
使编译算法更加清晰 tt
待装配的机器语言模块 tt
汇编语言代码 tt
对程序等价变换 tt
不改变程序执行效果 tt
引起程序形式上的变动 tt
改进算法 tt
在源程序级上等价变换 tt
充分利用系统提供的程序库 tt
编译时优化 tt
产生高效的目标代码 tt
局部优化—基本块内优化 tt
循环优化—隐式、显式循环体内优化 tt
全局优化—一个源程序范围内优化 tt
中间代码级—目标代码生成前的优化 tt
目标代码级—目标代码生成后的优化 tt
程序编译 tt
源程序串 tt
源语言的文法G tt
识别出的语法范畴的表示 tt
产生的方法，面向目标的方法 tt
辨认的方法，基于目标的方法 tt
整个生产过程，研究分析完整的工艺程序 tt
制定改进方案的一种分析技术 tt
ProgramAnalysis tt
程序优化 tt
程序正确性验证 tt
类型系统 tt
抽象解释 tt
程序验证 tt
模型检查 tt
程序调试 tt
更好地理解程序 tt
找出错误代码的位置 tt
确掌握工艺过程的整体状态 tt
工艺流程的顺序 tt
明确工序的总体关系 tt
各工序的作业时间确认 tt
发现总体工序不平衡的状态 tt
发现工序问题点 tt
发现并改进产生浪费的工序 tt
发现工时消耗较多的工序，重排简化此工序 tt
减少停滞及闲余工序 tt
合并一些过于细分或重复的工作 tt
工艺程序分析 tt
流程程序分析 tt
布置与路线分析 tt
闲余能量分析 tt
操作时两手的移动分析 tt
产品生产过程的工序状态 tt
选择所需研究的工作 tt
利用程序分析的图表对现行的方法全面记录 tt
建立最实用、最经济、最合理的新方法 tt
将所建立的新方法得以实现 tt
与工序管理图对照易于分析 tt
易于发现作业者的多余动作 tt
作业者自已对作业方法的改善比较有效 tt
彼此之间的时间关系及空闲时间清楚明了 tt
人与机械的运转状态清楚明了 tt
必须紧随作业者行动方可观察记录 tt
彼此之间没有时间关系的情况下分析也没用 tt
需要一定程度的时间精度要求 tt
利率期限结构的静态分析 tt
经济学静态分析 tt
Staticprogramanalysis tt
进行程序分析 tt
生成各种引用表 tt
直接从表中查出说明/使用错误 tt
为用户提供辅助信息 tt
用来做错误预测和程序复杂度计算 tt
标号交叉引用表 tt
变量交叉引用表 tt
子程序、宏和函数表 tt
等价表 tt
常数表 tt
确定在源程序中是否有某类错误或“危险”结构 tt
类型和单位分析 tt
引用分析 tt
在表达式中不正确地使用了括号造成的错误 tt
除式为零造成的错误 tt
数组下标越界造成的错误 tt
对负数开平方 tt
一种利用纯粹数学的方式分析软件的方法 tt
指称语义 tt
公理语义 tt
操作语义学 tt
抽象释义 tt
验证安全关键计算机系统中的软件 tt
DynamicAnalysis tt
软件工程 tt
计算机科学技术名词审定委员会 tt
2002年 tt
对静态分析进行有效的补充 tt
在现实经济生活分析中有着特别重要的地位 tt
softwaremetric tt
软件开发项目 tt
软件开发过程 tt
软件开发产品 tt
Softwaredevelopment tt
根据用户需求编写指定软件的行为 tt
对所要解决的问题进行总体定义 tt
软件需求分析 tt
软件设计 tt
软件编码 tt
开发平台 tt
开发环境 tt
JAVA tt
C tt
C++ tt
php tt
JSP tt
ASP tt
POWERBUILDER tt
DELPHI tt
.NET tt
C# tt
vb tt
MySQL tt
SQLSERVER tt
德智体全面发展 tt
计算机软硬件维护 tt
网络组建 tt
维护管理 tt
网络工程 tt
网络维护 tt
网络安全 tt
可视化编程 tt
WEB应用程序设计 tt
数据库管理 tt
图形图像制作 tt
网络构建技术 tt
网络系统管理 tt
多媒体制作 tt
计算机办公应用 tt
软件需求工具 tt
软件设计工具 tt
软件构造工具 tt
软件测试工具 tt
软件维护工具 tt
软件配置管理工具 tt
软件工程管理工具 tt
软件工程过程工具 tt
软件质量工具 tt
手机软件开发 tt
电脑软件开发 tt
softwaretesting tt
人工操作或者软件自动运行 tt
鉴定、审核软件 tt
验证和确认 tt
IT行业、有信息化管理的各行业 tt
保护知识产权所有者 tt
确认竞争产品是否侵权专利或版权 tt
接口设计 tt
军事或商业机密 tt
软件升级或更新 tt
制造没有许可/未授权的副本 tt
学术/学习目的 tt
去除复制保护和伪装的登录权限 tt
文件丢失 tt
产品分析 tt
制作游戏外挂 tt
降低企业开发新产品的成本与风险 tt
加快产品的造型和系列化的设计 tt
分析通过信息交换所得的观察 tt
反汇编 tt
反编译 tt
Surfacer tt
Verdict tt
Buildit tt
RPM tt
View tt
LOZ tt
减少计算机执行少的进程 tt
提高速度 tt
禁用闲置的IDE通道 tt
清理注册表里的垃圾文件，减少系统错误的产生 tt
加快开机速度，阻止一些程序开机自动执行 tt
加快上网和关机速度 tt
把系统个性化 tt
优化视觉效果 tt
优化性能 tt
启动和故障恢复 tt
禁用错误报告 tt
关闭系统还原功能 tt
关闭自动更新 tt
关闭远程桌面 tt
禁用休眠功能 tt
DynamicInsepction tt
国家标准《铁路工程术语标准》 tt
Logiccover tt
语句覆盖(SC) tt
判定覆盖(DC tt
条件覆盖(CC) tt
条件/判定覆盖(CC) tt
条件组合覆盖(CDC) tt
多条件覆盖(MCC) tt
修正判定条件覆盖(MCDC) tt
点覆盖 tt
边覆盖 tt
对程序执行逻辑的覆盖很低 tt
忽略了表达式内部取值 tt
不能够满足判定覆盖 tt
无法发现逻辑错误 tt
判定语句较多时，条件组合值比较多 tt
覆盖率最高的一种覆盖技术 tt
将程序流程图转换成控制流图 tt
经过语法分析求的路径表达式 tt
生成路径图 tt
进行路径编码 tt
经过译码得到执行的路径 tt
通过路径枚举产生特定路径测试用例 tt
修正的条件判断覆盖率(MC/DC) tt
设计测试用例来覆盖每条基路径 tt
从被测程序代码生成程序图 tt
利用“主路径+转向”的策略确定基路径集合 tt
剔除不可行路径，补充其他重要的路径 tt
根据路径集合确定测试用例，填入测试数据 tt
Expression tt
数学 tt
算术表达式 tt
逻辑表达式 tt
Programflowchart tt
改进工作方法 tt
程序设计 tt
直观 tt
清晰 tt
操作 tt
搬运 tt
检验 tt
储存 tt
等待 tt
顺序结构 tt
选择结构 tt
循环结构 tt
采用简单规范的符号，画法简单 tt
结构清晰，逻辑性强 tt
便于描述，容易理解 tt
是一个过程或程序的抽象表现 tt
Controlflowgraph tt
CFG tt
一种可视化程序设计工具 tt
一个基本块所对应的语句表 tt
当前活动的基本块 tt
上次执行的基本块 tt
执行流向 tt
静态结构图 tt
动态显示图 tt
浏览语句表 tt
统计信息 tt
检查系统的容错能力 tt
首先要采用各种办法强迫系统失败 tt
然后验证系统是否能尽快自动恢复 tt
重新初始化 tt
检验点设置机构 tt
重新启动是否正确 tt
平均修复时间是否在可接受的范围内 tt
软件出故障时自动恢复 tt
Failback tt
软件系统 tt
Datarecovery tt
台式机硬盘、笔记本硬盘 tt
抢救和恢复丢失的电子数据的技术 tt
电子数据恢复 tt
软恢复 tt
硬恢复 tt
数据库系统或封闭系统恢复 tt
覆盖恢复 tt
Codereview tt
对计算机源代码系统化地审查 tt
正式的代码审查 tt
轻量型的非正式代码审查 tt
敏捷软件开发 tt
Pairprogramming tt
指两位程序员完成同一个设计 tt
结对编程能编写出质量更高的代码 tt
可以促进程序员自身的提高 tt
远程结对编程 tt
乒乓结对编程 tt
MemoryLeak tt
常发性内存泄漏 tt
偶发性内存泄漏 tt
一次性内存泄漏 tt
隐式内存泄漏 tt
静态分析技术 tt
源代码插装技术 tt
目标代码插装技术 tt
被测代码预处理 tt
测试执行阶段 tt
数据统计与结果汇总 tt
ccmalloc－Linux tt
Dmalloc－Debug tt
ElectricFence－Linux tt
Leaky－Linux tt
LeakTracer－Linux tt
MEMWATCH tt
KCachegrind tt
IBMRationalPurifyPlus tt
ParasoftInsure++ tt
QuestJProbe tt
BufferOverflow tt
破坏活动记录 tt
破坏堆数据 tt
更改函数指针 tt
溢出固定缓存区 tt
模型化 tt
路径分析 tt
值验证 tt
另写分析工具 tt
参考对象 tt
影子内存 tt
库函数替换 tt
地址随机化 tt
关闭端口或服务 tt
安装软件厂商的补丁 tt
以所需要的最小权限运行软件 tt
Securityhole tt
零日攻击 tt
SQL注入攻击 tt
缓冲区溢出 tt
跨站脚本 tt
ARP欺骗 tt
eXtremeProgramming tt
交流 tt
反馈 tt
勇气 tt
整体团队 tt
规划策略，小发行版，客户测试 tt
测试优先开发设计改进 tt
持续集成编码标准 tt
系统比喻，可接受的步伐 tt
规划策略 tt
客户测试 tt
小发行版本 tt
简单设计 tt
测试优先开发 tt
设计改进 tt
持续集成 tt
集体代码 tt
编码标准 tt
系统比喻 tt
可接受的步伐 tt
Compiler tt
葛丽丝·霍普 tt
20世纪50年代末 tt
源代码→预处理器→编译器→目标代码 tt
译码器 tt
单片机 tt
编程语言 tt
语义分析 tt
生成目标文件 tt
链接 tt
在细节方面改进程序源代码的软件测试方法 tt
MutationTesting tt
DickLipton tt
算术和逻辑的突变操作 tt
对输入空间的分析 tt
针对域错误进行的测试 tt
根据各个分支谓词，给出子域的分割图 tt
在子域内选取一些测试点 tt
针对这些测试点进行测试 tt
Pharming tt
2004年 tt
非正式验收测试 tt
数据驱动测试 tt
基于需求规格说明书的功能测试 tt
行为测试 tt
结构测试 tt
透明盒测试 tt
逻辑驱动测试 tt
基于代码的测试 tt
模块测试 tt
链式测试 tt
交付测试 tt
组装测试 tt
联合测试 tt
部件测试 tt
因果分析图 tt
特性要因图 tt
石川图 tt
鱼骨图 tt
容错性测试 tt
UI测试 tt
单个字符序列 tt
translation rules tt
auxiliary procedures tt
源程序分析 tt
引用表 tt
系统科学 tt
分支覆盖 tt
多条件覆盖 tt
成对编程 tt
变异分析 tt
